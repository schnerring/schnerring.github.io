<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Michael Schnerring</title><link>https://schnerring.net/</link><description>Recent content on Michael Schnerring</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;p>Copyright © 2020 Michael Schnerring&lt;/p>&lt;p xmlns:dct='http://purl.org/dc/terms/' xmlns:cc='http://creativecommons.org/ns#' class='license-text'>&lt;a rel='cc:attributionURL' property='dct:title' href='https://github.com/schnerring/schnerring.github.io/tree/main/content'>Content&lt;/a> licensed under &lt;a rel='license' href='https://creativecommons.org/licenses/by/4.0'>CC BY 4.0&lt;/a>&lt;/p></copyright><lastBuildDate>Sun, 31 Oct 2021 08:19:52 +0100</lastBuildDate><atom:link href="https://schnerring.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Use Custom DNS Servers With Mullvad And Any WireGuard Client</title><link>https://schnerring.net/posts/use-custom-dns-servers-with-mullvad-and-any-wireguard-client/</link><pubDate>Sun, 31 Oct 2021 08:19:52 +0100</pubDate><guid>https://schnerring.net/posts/use-custom-dns-servers-with-mullvad-and-any-wireguard-client/</guid><description>
&lt;img src="https://schnerring.net/posts/use-custom-dns-servers-with-mullvad-and-any-wireguard-client/img/cover.svg"/>
I&amp;rsquo;ve been using Mullvad VPN for a while now but only ever used it with the official client on my workstation. I use DNS extensively in my home network, so as soon as I activate Mullvad, I can&amp;rsquo;t resolve DNS names locally. Of course, this is by design and expected. I own an OPNsense appliance, so the natural solution is to move the tunnel there.
Mullvad Hijacks DNS Queries Over WireGuard Tunnels Instead of using the OpenVPN protocol, I decided to go with the latest and greatest: WireGuard.</description></item><item><title>Use the Trezor Hardware Wallet Anonymously Inside a VirtualBox Whonix VM With External Wallets Like Adalite and Monero GUI</title><link>https://schnerring.net/posts/use-the-trezor-hardware-wallet-anonymously-inside-a-virtualbox-whonix-vm-with-external-wallets-like-adalite-and-monero-gui/</link><pubDate>Fri, 22 Oct 2021 20:15:36 +0200</pubDate><guid>https://schnerring.net/posts/use-the-trezor-hardware-wallet-anonymously-inside-a-virtualbox-whonix-vm-with-external-wallets-like-adalite-and-monero-gui/</guid><description>
&lt;img src="https://schnerring.net/posts/use-the-trezor-hardware-wallet-anonymously-inside-a-virtualbox-whonix-vm-with-external-wallets-like-adalite-and-monero-gui/img/cover.png"/>
In the past, I used an old laptop running Qubes OS for any cryptocurrency-related stuff, and it worked great. It&amp;rsquo;s where I first learned about Whonix, a desktop operating system designed to protect your privacy online. Unfortunately, Qubes OS is a bit picky about the hardware it runs on. My old laptop only has four gigs of RAM, and I could barely run two instances of MyEtherWallet in two separate qubes without the system running out of memory.</description></item><item><title>Create a Modern CSS-only Fold-Out Burger Menu</title><link>https://schnerring.net/posts/create-a-modern-css-only-fold-out-burger-menu/</link><pubDate>Tue, 03 Aug 2021 03:30:10 +0200</pubDate><guid>https://schnerring.net/posts/create-a-modern-css-only-fold-out-burger-menu/</guid><description>
&lt;img src="https://schnerring.net/posts/create-a-modern-css-only-fold-out-burger-menu/img/www.pexels.comphotoham-burger-with-vegetables-1639557.webp"/>
&lt;p>For the last couple of months, I have been working on a custom Hugo theme in my free time. Most recently, I implemented a CSS-only burger fold-out menu to increase its responsiveness. I based the implementation on &lt;a href="https://twitter.com/erikterwan">Erik Terwan&amp;rsquo;s&lt;/a> nifty &lt;a href="https://codepen.io/erikterwan/pen/EVzeRP">pure CSS Hamburger fold-out menu&lt;/a> which is pretty popular on CodePen. I modernized it by utilizing SVG and newer CSS selectors to make the code more declarative and scalable. It comes with the price of not supporting as many browsers, but honestly, who cares about Internet Explorer users?&lt;/p></description></item><item><title>Use Sieve Filters to Auto-Sort Your ProtonMail Inbox into Subfolders</title><link>https://schnerring.net/posts/use-sieve-filters-to-auto-sort-your-protonmail-inbox-into-subfolders/</link><pubDate>Wed, 16 Jun 2021 20:32:21 +0200</pubDate><guid>https://schnerring.net/posts/use-sieve-filters-to-auto-sort-your-protonmail-inbox-into-subfolders/</guid><description>
&lt;img src="https://schnerring.net/posts/use-sieve-filters-to-auto-sort-your-protonmail-inbox-into-subfolders/img/cover.svg"/>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Sieve_(mail_filtering_language)">Sieve&lt;/a> is a programming language used for email filtering. Today, I show you how I automatically sort my ProtonMail inbox into folders and subfolders using &lt;a href="https://protonmail.com/support/knowledge-base/sieve-advanced-custom-filters/">custom sieve filters&lt;/a>. My setup uses the &lt;a href="https://protonmail.com/support/knowledge-base/catch-all/">catch-all feature&lt;/a> requiring at least a &lt;a href="https://protonmail.com/pricing">ProtonMail Professional subscription&lt;/a> and a &lt;a href="https://protonmail.com/support/categories/custom-domains/">properly configured custom domain&lt;/a>.&lt;/p></description></item><item><title>Set Up Azure Active Directory Domain Services (AADDS) with Terraform</title><link>https://schnerring.net/posts/set-up-azure-active-directory-domain-services-aadds-with-terraform/</link><pubDate>Sat, 22 May 2021 16:23:36 +0200</pubDate><guid>https://schnerring.net/posts/set-up-azure-active-directory-domain-services-aadds-with-terraform/</guid><description>
&lt;img src="https://schnerring.net/posts/set-up-azure-active-directory-domain-services-aadds-with-terraform/img/cover.svg"/>
&lt;h3 id="update-2021-08-03">Update 2021-08-03&lt;/h3>
&lt;p>With &lt;a href="https://github.com/terraform-providers/terraform-provider-azurerm/releases/tag/v2.69.0">v2.69.0 of the official Terraform azurerm provider&lt;/a> released two weeks ago, the &lt;a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/active_directory_domain_service">&lt;code>active_directory_domain_service&lt;/code>&lt;/a> and &lt;a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/active_directory_domain_service_replica_set">&lt;code>active_directory_domain_service_replica_set&lt;/code>&lt;/a> resources are now available. If you are newly adding AADDS, there is no point in reading any further — use the official resources.&lt;/p>
&lt;p>I will switch in the coming weeks and write a short migration guide for the people using my &lt;a href="https://registry.terraform.io/modules/schnerring/aadds/azurerm/latest">AADDS Terraform module&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>Bringing traditional Active Directory Domain Services (AD DS) to the cloud, typically required to set up, secure, and maintain domain controllers (DCs). Azure Active Directory Domain Services (AADDS or Azure AD DS) is a &lt;em>Microsoft-managed&lt;/em> solution, providing a subset of &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory-domain-services/compare-identity-solutions">traditional AD DS features&lt;/a> without the need to &lt;em>self-manage&lt;/em> DCs.&lt;/p>
&lt;p>One such service that requires AD DS features is &lt;a href="https://docs.microsoft.com/en-us/azure/virtual-desktop/overview">Windows Virtual Desktop (WVD)&lt;/a>. I have successfully deployed WVD with Terraform, but until recently, I struggled to do the same with AADDS. Today, I show you how to deploy AADDS with Terraform.&lt;/p></description></item><item><title>Deploy a Matrix Homeserver to Azure Kubernetes Service (AKS) with Terraform</title><link>https://schnerring.net/posts/deploy-a-matrix-homeserver-to-azure-kubernetes-service-aks-with-terraform/</link><pubDate>Fri, 14 May 2021 01:13:33 +0200</pubDate><guid>https://schnerring.net/posts/deploy-a-matrix-homeserver-to-azure-kubernetes-service-aks-with-terraform/</guid><description>
&lt;img src="https://schnerring.net/posts/deploy-a-matrix-homeserver-to-azure-kubernetes-service-aks-with-terraform/img/cover.svg"/>
&lt;p>Did you ever think about running a Matrix homeserver? In this post, we will set one up on the &lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service/">Azure Kubernetes Service&lt;/a> (AKS). We will use the reference homeserver implementation, which is &lt;a href="https://github.com/matrix-org/synapse/">Synapse&lt;/a> from the folks at &lt;a href="https://matrix.org/">matrix.org&lt;/a>. This post focuses on the Kubernetes stuff, keeping Synapse configuration to a minimum. Things like &lt;a href="https://github.com/matrix-org/synapse/blob/master/docs/federate.md">federation&lt;/a>, &lt;a href="https://github.com/matrix-org/synapse/blob/master/docs/delegate.md">delegation&lt;/a> and &lt;a href="https://github.com/matrix-org/synapse/blob/master/docs/postgres.md#set-up-database">PostgreSQL&lt;/a> are out of scope, because plenty of excellent guides and the official documentation exist covering that. The icing on the cake will be the &lt;a href="https://github.com/Awesome-Technologies/synapse-admin">Synapse Admin UI&lt;/a> deployment with secure access to the &lt;a href="https://github.com/matrix-org/synapse/blob/develop/docs/reverse_proxy.md#synapse-administration-endpoints">administration endpoints&lt;/a> to make management of our homeserver easier.&lt;/p></description></item><item><title>Use Terraform to Deploy the Remark42 Commenting System to Kubernetes and Integrate it with a Hugo Website</title><link>https://schnerring.net/posts/use-terraform-to-deploy-the-remark42-commenting-system-to-kubernetes-and-integrate-it-with-a-hugo-website/</link><pubDate>Sun, 09 May 2021 09:31:13 +0200</pubDate><guid>https://schnerring.net/posts/use-terraform-to-deploy-the-remark42-commenting-system-to-kubernetes-and-integrate-it-with-a-hugo-website/</guid><description>
&lt;img src="https://schnerring.net/posts/use-terraform-to-deploy-the-remark42-commenting-system-to-kubernetes-and-integrate-it-with-a-hugo-website/img/cover.svg"/>
&lt;p>Building upon our previous work, we will deploy &lt;a href="https://remark42.com/">Remark42&lt;/a> on Kubernetes with &lt;a href="https://www.terraform.io/">Terraform&lt;/a> and integrate it with your existing &lt;a href="https://gohugo.io/">Hugo&lt;/a> website. Make sure to check out my previous posts about &lt;a href="../create-a-hugo-website-with-github-pages-github-actions-and-cloudflare">creating a Hugo Website&lt;/a> and &lt;a href="../use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt">deploying an Azure Kubernetes Service cluster&lt;/a> if you haven&amp;rsquo;t already.&lt;/p></description></item><item><title>Use Terraform to Deploy an Azure Kubernetes Service (AKS) Cluster, Traefik 2, cert-manager, and Let's Encrypt Certificates</title><link>https://schnerring.net/posts/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/</link><pubDate>Sun, 25 Apr 2021 01:00:27 +0200</pubDate><guid>https://schnerring.net/posts/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/</guid><description>
&lt;img src="https://schnerring.net/posts/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/img/cover.png"/>
&lt;p>In this post, we will deploy a simple &lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service/">Azure Kubernetes Service (AKS)&lt;/a> cluster from scratch. To expose our web services securely, we will install Traefik 2 and configure &lt;a href="https://cert-manager.io/">cert-manager&lt;/a> to manage Let&amp;rsquo;s Encrypt certificates. The best part about it: we will do everything with &lt;a href="https://www.terraform.io/">Terraform&lt;/a>.&lt;/p></description></item><item><title>Create a Hugo Website with GitHub Pages, GitHub Actions, and Cloudflare</title><link>https://schnerring.net/posts/create-a-hugo-website-with-github-pages-github-actions-and-cloudflare/</link><pubDate>Fri, 19 Mar 2021 21:14:22 +0100</pubDate><guid>https://schnerring.net/posts/create-a-hugo-website-with-github-pages-github-actions-and-cloudflare/</guid><description>
&lt;img src="https://schnerring.net/posts/create-a-hugo-website-with-github-pages-github-actions-and-cloudflare/img/cover.svg"/>
&lt;p>In this beginner guide, you&amp;rsquo;ll create a Hugo website from scratch and publish the website on GitHub Pages. You&amp;rsquo;ll configure Cloudflare&amp;rsquo;s DNS and utilize its caching capabilities to optimize page speeds. Finally, implementing automated deployments with GitHub Pages will enable you to publish new content on your site easily.&lt;/p></description></item><item><title>Hello World</title><link>https://schnerring.net/posts/hello-world/</link><pubDate>Sun, 14 Mar 2021 15:00:21 +0100</pubDate><guid>https://schnerring.net/posts/hello-world/</guid><description>
The first post of this blog</description></item><item><title>About</title><link>https://schnerring.net/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://schnerring.net/about/</guid><description>
I code by day and toy around with computers by night&amp;hellip;
Get In Touch GitHub Matrix: @michael:schnerring.net Twitter LinkedIn Legal The source code is licensed under the MIT license and content is licensed under the Creative Commons Attribution 4.0 International license. Both, source code and content of this site, is available on GitHub.
Cover images created with draw.io.
All trademarks are the property of their respective owners.</description></item></channel></rss>