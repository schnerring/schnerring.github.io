<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on Michael Schnerring</title><link>https://schnerring.net/tags/devops/</link><description>Recent content in DevOps on Michael Schnerring</description><generator>Hugo -- gohugo.io</generator><copyright>Â© 2020 Michael Schnerring</copyright><lastBuildDate>Sun, 27 Mar 2022 08:12:20 +0200</lastBuildDate><atom:link href="https://schnerring.net/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Automate Building Custom Windows Images For Azure Virtual Desktop With Packer And GitHub Actions</title><link>https://schnerring.net/blog/automate-building-custom-windows-images-for-azure-virtual-desktop-with-packer-and-github-actions/</link><pubDate>Sun, 27 Mar 2022 08:12:20 +0200</pubDate><guid>https://schnerring.net/blog/automate-building-custom-windows-images-for-azure-virtual-desktop-with-packer-and-github-actions/</guid><description>&lt;p>One aspect of managing &lt;a
href="https://azure.microsoft.com/en-us/services/virtual-desktop/"
class="link--external" target="_blank" rel="noreferrer"
>Azure Virtual Desktop (AVD)&lt;/a> is keeping it up-to-date. One strategy is periodically building a &amp;ldquo;golden&amp;rdquo; image and re-deploying AVD session host VMs using the updated image. In this post, we&amp;rsquo;ll use &lt;a
href="https://www.packer.io/"
class="link--external" target="_blank" rel="noreferrer"
>Packer&lt;/a> and &lt;a
href="https://github.com/features/actions"
class="link--external" target="_blank" rel="noreferrer"
>GitHub Actions&lt;/a> to build a Windows 11 image and push it to Azure.&lt;/p></description></item><item><title>Use Terraform to Deploy an Azure Kubernetes Service (AKS) Cluster, Traefik 2, cert-manager, and Let's Encrypt Certificates</title><link>https://schnerring.net/blog/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/</link><pubDate>Sun, 25 Apr 2021 01:00:27 +0200</pubDate><guid>https://schnerring.net/blog/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/</guid><description>&lt;p>In this post, we will deploy a simple &lt;a
href="https://azure.microsoft.com/en-us/services/kubernetes-service/"
class="link--external" target="_blank" rel="noreferrer"
>Azure Kubernetes Service (AKS)&lt;/a> cluster from scratch. To expose our web services securely, we will install Traefik 2 and configure &lt;a
href="https://cert-manager.io/"
class="link--external" target="_blank" rel="noreferrer"
>cert-manager&lt;/a> to manage Let&amp;rsquo;s Encrypt certificates. The best part about it: we will do everything with &lt;a
href="https://www.terraform.io/"
class="link--external" target="_blank" rel="noreferrer"
>Terraform&lt;/a>.&lt;/p></description></item></channel></rss>