<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Michael Schnerring</title><link>https://schnerring.net/posts/</link><description>Recent content in Posts on Michael Schnerring</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;p>Copyright Â© 2020 Michael Schnerring&lt;/p>&lt;p xmlns:dct='http://purl.org/dc/terms/' xmlns:cc='http://creativecommons.org/ns#' class='license-text'>&lt;a rel='cc:attributionURL' property='dct:title' href='https://github.com/schnerring/schnerring.github.io/tree/main/content'>Content&lt;/a> licensed under &lt;a rel='license' href='https://creativecommons.org/licenses/by/4.0'>CC BY 4.0&lt;/a>&lt;/p></copyright><lastBuildDate>Sat, 22 May 2021 16:23:36 +0200</lastBuildDate><atom:link href="https://schnerring.net/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Set Up Azure Active Directory Domain Services (AADDS) with Terraform</title><link>https://schnerring.net/posts/set-up-azure-active-directory-domain-services-aadds-with-terraform/</link><pubDate>Sat, 22 May 2021 16:23:36 +0200</pubDate><guid>https://schnerring.net/posts/set-up-azure-active-directory-domain-services-aadds-with-terraform/</guid><description>
&lt;img src="https://schnerring.net/posts/set-up-azure-active-directory-domain-services-aadds-with-terraform/img/cover.svg"/>
&lt;p>Bringing traditional Active Directory Domain Services (AD DS) to the cloud, typically required to set up, secure, and maintain domain controllers (DCs). Azure Active Directory Domain Services (AADDS or Azure AD DS) is a &lt;em>Microsoft-managed&lt;/em> solution, providing a subset of &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory-domain-services/compare-identity-solutions">traditional AD DS features&lt;/a> without the need to &lt;em>self-manage&lt;/em> DCs.&lt;/p>
&lt;p>One such service that requires AD DS features is &lt;a href="https://docs.microsoft.com/en-us/azure/virtual-desktop/overview">Windows Virtual Desktop (WVD)&lt;/a>. I have successfully deployed WVD with Terraform, but until recently, I struggled to do the same with AADDS. Today, I show you how to deploy AADDS with Terraform.&lt;/p></description></item><item><title>Deploy a Matrix Homeserver to Azure Kubernetes Service (AKS) with Terraform</title><link>https://schnerring.net/posts/deploy-a-matrix-homeserver-to-azure-kubernetes-service-aks-with-terraform/</link><pubDate>Fri, 14 May 2021 01:13:33 +0200</pubDate><guid>https://schnerring.net/posts/deploy-a-matrix-homeserver-to-azure-kubernetes-service-aks-with-terraform/</guid><description>
&lt;img src="https://schnerring.net/posts/deploy-a-matrix-homeserver-to-azure-kubernetes-service-aks-with-terraform/img/cover.svg"/>
&lt;p>Did you ever think about running a Matrix homeserver? In this post, we will set one up on the &lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service/">Azure Kubernetes Service&lt;/a> (AKS). We will use the reference homeserver implementation, which is &lt;a href="https://github.com/matrix-org/synapse/">Synapse&lt;/a> from the folks at &lt;a href="https://matrix.org/">matrix.org&lt;/a>. This post focuses on the Kubernetes stuff, keeping Synapse configuration to a minimum. Things like &lt;a href="https://github.com/matrix-org/synapse/blob/master/docs/federate.md">federation&lt;/a>, &lt;a href="https://github.com/matrix-org/synapse/blob/master/docs/delegate.md">delegation&lt;/a> and &lt;a href="https://github.com/matrix-org/synapse/blob/master/docs/postgres.md#set-up-database">PostgreSQL&lt;/a> are out of scope, because plenty of excellent guides and the official documentation exist covering that. The icing on the cake will be the &lt;a href="https://github.com/Awesome-Technologies/synapse-admin">Synapse Admin UI&lt;/a> deployment with secure access to the &lt;a href="https://github.com/matrix-org/synapse/blob/develop/docs/reverse_proxy.md#synapse-administration-endpoints">administration endpoints&lt;/a> to make management of our homeserver easier.&lt;/p></description></item><item><title>Use Terraform to Deploy the Remark42 Commenting System to Kubernetes and Integrate it with a Hugo Website</title><link>https://schnerring.net/posts/use-terraform-to-deploy-the-remark42-commenting-system-to-kubernetes-and-integrate-it-with-a-hugo-website/</link><pubDate>Sun, 09 May 2021 09:31:13 +0200</pubDate><guid>https://schnerring.net/posts/use-terraform-to-deploy-the-remark42-commenting-system-to-kubernetes-and-integrate-it-with-a-hugo-website/</guid><description>
&lt;p>Building upon our previous work, we will deploy &lt;a href="https://remark42.com/">Remark42&lt;/a> on Kubernetes with &lt;a href="https://www.terraform.io/">Terraform&lt;/a> and integrate it with your existing &lt;a href="https://gohugo.io/">Hugo&lt;/a> website. Make sure to check out my previous posts about &lt;a href="../create-a-hugo-website-with-github-pages-github-actions-and-cloudflare">creating a Hugo Website&lt;/a> and &lt;a href="../use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt">deploying an Azure Kubernetes Service cluster&lt;/a> if you haven&amp;rsquo;t already.&lt;/p></description></item><item><title>Use Terraform to Deploy an Azure Kubernetes Service (AKS) Cluster, Traefik 2, cert-manager, and Let's Encrypt Certificates</title><link>https://schnerring.net/posts/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/</link><pubDate>Sun, 25 Apr 2021 01:00:27 +0200</pubDate><guid>https://schnerring.net/posts/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/</guid><description>
&lt;img src="https://schnerring.net/posts/use-terraform-to-deploy-an-azure-kubernetes-service-aks-cluster-traefik-2-cert-manager-and-lets-encrypt-certificates/img/cover.png"/>
&lt;p>In this post, we will deploy a simple &lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service/">Azure Kubernetes Service (AKS)&lt;/a> cluster from scratch. To expose our web services securely, we will install Traefik 2 and configure &lt;a href="https://cert-manager.io/">cert-manager&lt;/a> to manage Let&amp;rsquo;s Encrypt certificates. The best part about it: we will do everything with &lt;a href="https://www.terraform.io/">Terraform&lt;/a>.&lt;/p></description></item><item><title>Create a Hugo Website with GitHub Pages, GitHub Actions, and Cloudflare</title><link>https://schnerring.net/posts/create-a-hugo-website-with-github-pages-github-actions-and-cloudflare/</link><pubDate>Fri, 19 Mar 2021 21:14:22 +0100</pubDate><guid>https://schnerring.net/posts/create-a-hugo-website-with-github-pages-github-actions-and-cloudflare/</guid><description>
&lt;img src="https://schnerring.net/posts/create-a-hugo-website-with-github-pages-github-actions-and-cloudflare/img/cover.svg"/>
&lt;p>In this beginner guide, you&amp;rsquo;ll create a Hugo website from scratch and publish the website on GitHub Pages. You&amp;rsquo;ll configure Cloudflare&amp;rsquo;s DNS and utilize its caching capabilities to optimize page speeds. Finally, implementing automated deployments with GitHub Pages will enable you to publish new content on your site easily.&lt;/p></description></item><item><title>Hello World</title><link>https://schnerring.net/posts/hello-world/</link><pubDate>Sun, 14 Mar 2021 15:00:21 +0100</pubDate><guid>https://schnerring.net/posts/hello-world/</guid><description>
The first post of this blog</description></item></channel></rss>